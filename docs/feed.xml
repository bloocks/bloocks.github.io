<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bloocks fastest websites generator ever!</title>
    <description>Build badass and fastest marketing websites with Bloocks, a static websites generator to build Ecommerce and websites on top of tecnical performaces.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Nov 2020 01:00:00 +0100</pubDate>
    <lastBuildDate>Wed, 25 Nov 2020 01:00:00 +0100</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Using Boocks! with the Google AMP technology in Blog webpages</title>
        <description>&lt;p&gt;The new version &lt;strong&gt;&lt;a href=&quot;https://github.com/jgthms/bulma/releases/tag/0.8.0&quot;&gt;Bulma 0.8.0&lt;/a&gt;&lt;/strong&gt; is out! üòÉ It comes with several bug fixes and a lot of nice new features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#light-dark-colors&quot;&gt;Light/Dark colors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#better-visual-look&quot;&gt;Better visual look&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#panel-colors&quot;&gt;Panel colors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#larger-form-controls&quot;&gt;Larger form controls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-value-color-map&quot;&gt;4-value color map&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#scheme-variables-for-dark-mode&quot;&gt;Scheme variables for ‚ÄúDark mode‚Äù&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More in the &lt;a href=&quot;https://github.com/jgthms/bulma/releases/tag/0.8.0&quot;&gt;Changelog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Each main color (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;primary&quot;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;info&quot;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;success&quot;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;warning&quot;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;danger&quot;&lt;/code&gt;) now comes with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*-light&lt;/code&gt; and a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*-dark&lt;/code&gt; version. They are calculated using 2 new color functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findLightColor()&lt;/code&gt; which finds the light version of a color&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findDarkolor()&lt;/code&gt; which finds the dark version of a color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;light&lt;/strong&gt; colors are used by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;button&lt;/code&gt; element:&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/documentation/elements/button&quot;&gt;
    &lt;img src=&quot;/images/blog/v8/light-buttons-bis.png&quot; alt=&quot;List Bulma buttons&quot; width=&quot;530&quot; height=&quot;104&quot; /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;The &lt;strong&gt;light&lt;/strong&gt; and &lt;strong&gt;dark&lt;/strong&gt; colors are used by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; component, which generates much prettier colored versions. See the difference between before (left) and after (right):&lt;/p&gt;

&lt;div class=&quot;bd-post-fullwidth&quot;&gt;
  &lt;a href=&quot;/documentation/components/message&quot;&gt;
    &lt;img src=&quot;/images/blog/v8/messages-before.png&quot; alt=&quot;Messages before&quot; width=&quot;448&quot; height=&quot;1200&quot; /&gt;
    &lt;img src=&quot;/images/blog/v8/messages-after.png&quot; alt=&quot;Messages after&quot; width=&quot;448&quot; height=&quot;1200&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Some of the Bulma colors have been updated:&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Color&lt;/th&gt;
    &lt;th&gt;Before&lt;/th&gt;
    &lt;th&gt;After&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      &lt;code&gt;$green&lt;/code&gt;
    &lt;/th&gt;
    &lt;td&gt;
   
    &lt;/td&gt;
    &lt;td&gt;
    
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      &lt;code&gt;$cyan&lt;/code&gt;
    &lt;/th&gt;
    &lt;td&gt;
      
    &lt;/td&gt;
    &lt;td&gt;
      
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      &lt;code&gt;$red&lt;/code&gt;
    &lt;/th&gt;
    &lt;td&gt;
   
    &lt;/td&gt;
    &lt;td&gt;
     
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;strong&gt;shadows&lt;/strong&gt; of the &lt;code&gt;box&lt;/code&gt; and &lt;code&gt;card&lt;/code&gt; have been improved:&lt;/p&gt;

&lt;div class=&quot;bd-post-fullwidth&quot;&gt;
  &lt;a href=&quot;/documentation/components/card&quot;&gt;
    &lt;img src=&quot;/images/blog/v8/card-before.png&quot; alt=&quot;Card before&quot; width=&quot;464&quot; height=&quot;236&quot; /&gt;
    &lt;img src=&quot;/images/blog/v8/card-after.png&quot; alt=&quot;Card after&quot; width=&quot;464&quot; height=&quot;236&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;div class=&quot;bd-post-fullwidth&quot;&gt;
  &lt;a href=&quot;/documentation/elements/box&quot; style=&quot;display: block;&quot; class=&quot;has-text-centered&quot;&gt;
    &lt;img src=&quot;/images/blog/v8/box-before.png&quot; alt=&quot;Box before&quot; width=&quot;464&quot; height=&quot;236&quot; /&gt;
    &lt;img src=&quot;/images/blog/v8/box-after.png&quot; alt=&quot;Box after&quot; width=&quot;464&quot; height=&quot;236&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
  The &lt;a href=&quot;/documentation/components/panel&quot;&gt;panel component&lt;/a&gt; is now available in all &lt;strong&gt;colors&lt;/strong&gt;:
&lt;/p&gt;

&lt;div class=&quot;bd-post-fullwidth&quot;&gt;
  &lt;a href=&quot;/documentation/components/panel&quot;&gt;
    &lt;img src=&quot;/images/blog/v8/panel-colors.png&quot; alt=&quot;Panel colors&quot; width=&quot;768&quot; height=&quot;1029&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Form controls and buttons are now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2.5em&lt;/code&gt; high. You can revert this resizing by setting these previous values:&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$control-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.25em&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$control-padding-vertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.375em&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$control-border-width&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$control-padding-horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.625em&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$control-border-width&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$button-padding-vertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.375em&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$button-border-width&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$button-padding-horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.75em&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$colors&lt;/code&gt; Sass map now accepts, for each of its values, a map of up to &lt;strong&gt;4&lt;/strong&gt; values. For example: the key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;info&quot;&lt;/code&gt; now has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;($info, $info-invert, $info-light, $info-dark)&lt;/code&gt; map.&lt;/p&gt;

&lt;p&gt;If you provide a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$custom-colors&lt;/code&gt; map, you can decide to provide a map of 1, 2, 3 or 4 values for each value. If fewer than 4 are provided, Bulma will calculate the remaining ones:&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$custom-colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;lime&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;lime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;tomato&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;tomato&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;orange&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orange-invert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$orange-light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;lavender&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lavender&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lavender-invert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lavender-light&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lavender-dark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is processed by the updated &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mergeColorMaps()&lt;/code&gt; Sass function.&lt;/p&gt;

&lt;p&gt;There are 6 new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme&lt;/code&gt; derived variables: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme-main&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme-main-bis&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme-main-ter&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme-invert&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme-invert-bis&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$scheme-invert-ter&lt;/code&gt;
They replace the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$white&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$black&lt;/code&gt; occurences in the codebase.&lt;/p&gt;

&lt;p&gt;This makes it easy to create a &lt;strong&gt;‚ÄúDark mode‚Äù&lt;/strong&gt; simply by swapping the values:&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$scheme-main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$black&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$scheme-invert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$white&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// etc.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That is also why most of the codebase now references &lt;strong&gt;derived&lt;/strong&gt; variables (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$text&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$background&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$border&lt;/code&gt; etc.) instead of &lt;strong&gt;initial&lt;/strong&gt; ones (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$grey&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$grey-lighter&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$grey-darker&lt;/code&gt; etc.): updating the derived variables will affect all elements and components directly.&lt;/p&gt;

&lt;hr class=&quot;hr&quot; /&gt;

&lt;p&gt;The new 0.8.0 version should be fully compatible with any Bulma setup. Feel free to &lt;a href=&quot;https://github.com/jgthms/bulma/issues&quot; target=&quot;_blank&quot;&gt;post an issue&lt;/a&gt; if you encounter any problem upgrading.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Nov 2020 00:00:00 +0100</pubDate>
        <link>/2020/11/22/introducing-bloocks-amp-blog.html</link>
        <guid isPermaLink="true">/2020/11/22/introducing-bloocks-amp-blog.html</guid>
        
        <category>fotografia</category>
        
        <category>business</category>
        
        <category>servizi</category>
        
        <category>aziende</category>
        
        
      </item>
    
      <item>
        <title>Bloocks! static site generator is out</title>
        <description>&lt;p&gt;Bloocks! a static websites generator under development! Hi, I‚Äôm Antonio and I‚Äôm creating a static website generator, it‚Äôs called Bloocks!, which combines the latest frontend development technologies, to maximize development speed and get a static website with fantastic performance in line with market needs inherent to performance and scalability.&lt;/p&gt;

&lt;p&gt;Bloocks! will allow you to develop your block frontend, using a templating engine with ready-to-use pre-built graphic blocks, in this way, Bloocks! will give you the opportunity to quickly prototype and test business ideas and marketing campaigns directly on the web already having an efficient and functional basic tool, without spending a cent on frontend development and hosting, and then, at will, develop a backend appropriate to your business idea, but knowing already, thanks to the launch of marketing campaigns, if your business idea will be successful.&lt;/p&gt;

&lt;p&gt;Yes, because Bloocks! it is structured to be hosted on next generation hosting services, such as Netlify, Github Pages and will also have integrations that will allow it to be hosted on distributed P2P networks using Blockchain technology and its cutting-edge protocols; moreover, it can be hosted on classic hosting platforms.&lt;/p&gt;

&lt;p&gt;Bloocks! exploits the potential of CDN to serve images, load scripts and style sheets, loaded dynamically, so that they do not overload the server where it is hosted, but exploit all the potential and third-party technologies that allow the development of a truly performing website, at the enterprice level.&lt;/p&gt;

&lt;p&gt;Bloocks! uses Tailwind CSS to process style sheets, this allows it, thanks to Tailwind CSS technology, to generate only the style sheets strictly necessary for the project and therefore have the CSS perfectly minimized; also thanks to the integration with Tailwind CSS, develop with Bloocks! will allow you to use only and exclusively HTML classes to generate your graphic templates, without putting your hand to CSS code.&lt;/p&gt;

&lt;p&gt;The code developed with Bloocks! in the production phase it is completely minimized by the static generator, so at the end of the work you will have a web project already completely minimized&lt;/p&gt;

&lt;p&gt;Bloocks! is composed by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A static web page generator&lt;/li&gt;
  &lt;li&gt;An ecommerce that uses Snipchart as an engine&lt;/li&gt;
  &lt;li&gt;A blog in AMP to maximize SEO performance&lt;/li&gt;
  &lt;li&gt;A portfolio to have a showroom of works&lt;/li&gt;
  &lt;li&gt;Customizable posting areas&lt;/li&gt;
  &lt;li&gt;Marketing tools such as modal popups, email marketing forms&lt;/li&gt;
  &lt;li&gt;Google Analytics&lt;/li&gt;
  &lt;li&gt;Google ADSense&lt;/li&gt;
  &lt;li&gt;Coockie consent already integrated&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Technologies used to create Bloocks!:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Babel&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;Gulp&lt;/li&gt;
  &lt;li&gt;Tailwind CSS&lt;/li&gt;
  &lt;li&gt;AMP&lt;/li&gt;
  &lt;li&gt;Jekyll&lt;/li&gt;
  &lt;li&gt;Browsersync&lt;/li&gt;
  &lt;li&gt;Autoprefixer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Future integrations planned:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PostCSS&lt;/li&gt;
  &lt;li&gt;Rucksack, PostCSS plugin&lt;/li&gt;
  &lt;li&gt;cypress&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bloocks! it is still under development, and does not have a precise release date, try to understand, I am alone in developing this project and I do not have the resources to be able to plan when it will be completely ready, if you are interested in collaborating on the project contact me!&lt;/p&gt;

&lt;p&gt;Bloocks! will be available with a free license for personal use and with various packages for professional use, you can still create your site, ecommerce, portfolio or test marketing campaigns for your ideas, but if you want to resell the projects you develop to third parties you will have to buy a license.&lt;/p&gt;

&lt;p&gt;See you soon from Antonio.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Nov 2020 00:00:00 +0100</pubDate>
        <link>/2020/11/18/bloocks-is-out.html</link>
        <guid isPermaLink="true">/2020/11/18/bloocks-is-out.html</guid>
        
        <category>websites</category>
        
        <category>business</category>
        
        <category>marketing</category>
        
        <category>developing</category>
        
        
      </item>
    
  </channel>
</rss>
